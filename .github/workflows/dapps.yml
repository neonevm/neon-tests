name: "dApps testing"
on:
  workflow_dispatch:
  push:
    branches:
      - '**NDEV-629'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.DAPPS_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.DAPPS_AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-2
  AWS_S3_BUCKET: neon-tests-dapps

jobs:
  pipeline:
    runs-on: ubuntu-20.04
    if: always()
    steps:
      - name: Install terraform
        id: terraform
        run: |

          sudo apt-get update && sudo apt-get install -y python-dev gnupg software-properties-common wget
          wget -O- https://apt.releases.hashicorp.com/gpg | \
              gpg --dearmor | \
              sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          gpg --no-default-keyring \
              --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg \
              --fingerprint
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
              https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
              sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update
          sudo apt-get install terraform

      - uses: actions/checkout@v3
      - name: "Install python requirements"
        if: steps.terraform.outcome == 'success'
        id: requirements
        uses: ./.github/actions/requirements

      - name: "Deploy stand"
        id: deploy
        if: steps.requirements.outcome == 'success'
        run: |
          ssh_key=/tmp/dapps-stand
          echo "${{ secrets.SHH_DAPPS_PRIVATE_KEY }}" >> ${ssh_key} && chmod 400 ${ssh_key}
          ./clickfile.py infra deploy
          #echo "::set-output name=solana_ip::${env.SOLANA_IP}"
          #echo "::set-output name=proxy_ip::${env.PROXY_IP}"
          echo "SOLANA: ${{ env.SOLANA_IP }}"
          echo "NETWORK: ${{ env.NETWORK }}"
      - name: "Check environments"
        id: environments
        if: steps.deploy.outcome == 'success'
        env:
          SOLANA_IP: ${{ env.SOLANA_IP }}
          PROXY_IP: ${{ env.PROXY_IP }}
        run: |
          echo "SOLANA IP: ${{ SOLANA_IP }}"
          echo "PROXY IP: ${{ PROXY_IP }}"
          ./clickfile.py infra gen-accounts
      - uses: actions/upload-artifact@v3
        with:
          name: tf-state
          path: deploy/aws/
      - uses: actions/download-artifact@v3
        with:
          name: tf-state
      - name: "Destroy stand"
        if: always()
        id: destroy
        run: |
          ./clickfile.py infra destroy

    #outputs:
    #  solana_ip: ${{ steps.deploy.outputs.solana_ip }}
    #  proxy_ip: ${{ steps.deploy.outputs.proxy_ip }}
    #  proxy_url: "http://${{ steps.deploy.outputs.proxy_ip }}:9090/solana"
    #  solana_url: "http://${{ steps.deploy.outputs.solana_ip }}:8899/"

  #uniswap:
  #  runs-on: "neon-hosted"
  #  needs:
  #    - prepare-stand
  #  steps:
  #    - name: "Clone repository"
  #      run: |
  #        git clone https://github.com/neonlabsorg/Uniswap-V2-NEON.git
  #    - name: "Build docker container"
  #      run: |
  #        docker build -t uniswap:latest .
  #    - name: "Prepare accounts"
  #      id: accounts
  #      run: |
  #        - ./clickfile.py infra prepare-accounts -c 1 -a 10000
  #    - name: "Run tests"
  #      run: |
   #       docker run -it -e NEON_PROXY_URL=${{ needs.prepare-stand.outputs.proxy_url }} -e NEON_ACCOUNTS=${{ steps.accounts.outputs.accounts }} uniswap:latest
