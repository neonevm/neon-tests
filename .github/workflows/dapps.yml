name: "dApps testing"
on:
  workflow_dispatch:
  push:
    branches:
      - '**NDEV-629'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  RUNNER: ubuntu-20.04

jobs:
  prepare-env:
    runs-on: ubuntu-20.04
    if: always()
    steps:
      - name: Setup env
        id: setup
        run: |

          RUNNER=${{ env.RUNNER }}
          echo "Runner: ${RUNNER}"
          echo "::set-output name=runner::${RUNNER}"

          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common wget
          wget -O- https://apt.releases.hashicorp.com/gpg | \
              gpg --dearmor | \
              sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          gpg --no-default-keyring \
              --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg \
              --fingerprint
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
              https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
              sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update
          sudo apt-get install terraform

    outputs:
      runner: ${{ steps.setup.outputs.runner }}

  prepare-stand:
    needs:
      - prepare-env
    runs-on: ${{ needs.prepare-env.outputs.runner }}
    steps:
      - uses: actions/checkout@v2
      - name: "Install deps"
        id: requirements
        uses: ./.github/actions/python-requirements
      - name: "Deploy stand"
        id: deploy
        run: |
          ./clickfile.py infra deploy
          #./clickfile.py infra gen-accounts
          echo "::set-output name=solana_ip::${env.SOLANA_IP}"
          echo "::set-output name=proxy_ip::${env.PROXY_IP}"
      - uses: actions/upload-artifact@v3
        with:
          name: tf-state
          path: deploy/aws/

    outputs:
      solana_ip: ${{ steps.prepare.outputs.solana_ip }}
      proxy_ip: ${{ steps.prepare.outputs.proxy_ip }}
      #accounts: ${{ steps.prepare.outputs.accounts }}
      proxy_url: "http://${{ steps.prepare.outputs.proxy_ip }}:9090/solana"
      solana_url: "http://${{ steps.prepare.outputs.solana_ip }}:8899/"

  #uniswap:
  #  runs-on: "neon-hosted"
  #  needs:
  #    - prepare-stand
  #  steps:
  #    - name: "Clone repository"
  #      run: |
  #        git clone https://github.com/neonlabsorg/Uniswap-V2-NEON.git
  #    - name: "Build docker container"
  #      run: |
  #        docker build -t uniswap:latest .
  #    - name: "Prepare accounts"
  #      id: accounts
  #      run: |
  #        - ./clickfile.py infra prepare-accounts -c 1 -a 10000
  #    - name: "Run tests"
  #      run: |
   #       docker run -it -e NEON_PROXY_URL=${{ needs.prepare-stand.outputs.proxy_url }} -e NEON_ACCOUNTS=${{ steps.accounts.outputs.accounts }} uniswap:latest

  destroy-stand:
    runs-on: ${{ needs.prepare-env.outputs.runner }}
    if: always()
    needs:
      #- uniswap
      - prepare-env
      - prepare-stand
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          name: tf-state
      - name: "Install deps"
        id: requirements
        uses: ./.github/actions/python-requirements
      - name: "Destroy stand"
        id: destroy
        run: |
          ./clickfile.py infra destroy