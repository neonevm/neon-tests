name: "dApps testing"
on:
  workflow_dispatch:
  push:
    branches:
      - '**NDEV-629'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.DAPPS_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.DAPPS_AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-2
  AWS_S3_BUCKET: neon-tests-dapps
  BUILD_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

jobs:
  pipeline:
    runs-on: ubuntu-20.04
    if: always()
    steps:
      - name: Install terraform
        id: terraform
        run: |
          exit 0

          sudo apt-get update && sudo apt-get install -y python-dev gnupg software-properties-common wget
          wget -O- https://apt.releases.hashicorp.com/gpg | \
              gpg --dearmor | \
              sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          gpg --no-default-keyring \
              --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg \
              --fingerprint
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
              https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
              sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update
          sudo apt-get install terraform

      - uses: actions/checkout@v3
      - name: Install python requirements
        if: steps.terraform.outcome == 'success'
        id: requirements
        uses: ./.github/actions/requirements

      - name: Deploy stand with terraform
        id: deploy
        if: steps.requirements.outcome == 'success'
        run: |
          exit 0
          ssh_key=/tmp/dapps-stand
          echo "${{ secrets.SHH_DAPPS_PRIVATE_KEY }}" >> ${ssh_key} && chmod 400 ${ssh_key}
          ./clickfile.py infra deploy

      - name: Prepare accounts
        id: accounts
        if: steps.deploy.outcome == 'success'
        env:
          SOLANA_IP: ${{ env.SOLANA_IP }}
          PROXY_IP: ${{ env.PROXY_IP }}
        run: |
          exit 0
          ./clickfile.py infra gen-accounts -c 1 -a 10000

      - name: Launch uniswap tests
        id: uniswap
        if: steps.accounts.outcome == 'success'
        env:
          ACCOUNTS: ${{ env.ACCOUNTS }}
          PROXY_IP: ${{ env.PROXY_IP }}
        run: |
          exit 1
          CWD=/opt/uniswap
          mkdir -p ${CWD}
          git clone https://github.com/neonlabsorg/Uniswap-V2-NEON.git ${CWD}

          cat <<EOF > ${CWD}/docker/entrypoint.sh
          #!/bin/sh
          # Change to the correct directory
          cd /usr/src/app
          # Run hardhat
          yarn deploy

          EOF

          docker build -t uniswap:latest ${CWD}
          proxy_url=http://${{ env.PROXY_IP }}:9090/solana
          test -t 1 && USE_TTY="-t"
          docker run -i ${USE_TTY} -e NEON_PROXY_URL=${proxy_url} -e NEON_ACCOUNTS=${{ env.ACCOUNTS }} uniswap:latest

      - name: Notify on failure
        id: notification
        if: failure()
        run: |
          ./clickfile.py send-notification -u ${{ secrets.SLACK_QA_CHANNEL_URL }} -b ${{ env.BUILD_URL }} -t "FAILED dapps: Uniswap-V2-NEON tests"

      - name: Destroy stand with terraform
        if: always()
        id: destroy
        run: |
          exit 0
          ./clickfile.py infra destroy
