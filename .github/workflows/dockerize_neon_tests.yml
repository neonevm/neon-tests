name: Docker Image for all neon tests

on:
  push:
    branches:
      - "**"
  workflow_dispatch:
    inputs:
      oz_branch:
        type: string
        required: false
        description: "Which OZ branch to use (if it is empty 'master', branch will be used)"

jobs:
  dockerize:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Define env
        id: define-env
        run: |
            if [[ "${{ github.event_name }}" == "push" && "${{ github.ref_name }}" == 'develop'  ]]; then
                tag='latest'
                oz_branch='master'
            elif [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.ref_name }}" == 'develop' && ( "${{ github.event.inputs.oz_branch }}" == 'master' || "${{ github.event.inputs.oz_branch }}" == "" ) ]]; then
                tag='latest'
                oz_branch='master'
            elif [[ "${{ github.event.inputs.oz_branch }}" != "" ]]; then
                tag='${{ github.event.inputs.oz_branch }}'
                oz_branch='${{ github.event.inputs.oz_branch }}'
            else
                tag='${{ github.sha }}'
                oz_branch='master'
            fi
            echo "tag=${tag}"
            echo "oz_branch=${oz_branch}"
            echo "tag=${tag}" >> $GITHUB_OUTPUT
            echo "oz_branch=${oz_branch}" >> $GITHUB_OUTPUT
      - name: Define feature or version branch
        id: feature_branch
        if: github.ref_name !='develop' || github.ref_name !='master'
        run: |
            value=${{ github.ref_name }}
            echo "value=${value}"
            echo "value=${value}" >> $GITHUB_OUTPUT
      - name: "Dockerize neon tests"
        uses: ./.github/actions/dockerize-neon-tests
        with:
          image_tag: ${{ steps.define-env.outputs.tag }}
          branch_tag: ${{ steps.feature_branch.outputs.value }}
          docker_username: ${{ secrets.DOCKER_USERNAME }}
          docker_password: ${{ secrets.DOCKER_PASSWORD }}
          oz_branch: ${{ steps.define-env.outputs.oz_branch }}
